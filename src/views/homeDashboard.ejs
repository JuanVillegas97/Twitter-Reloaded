<!DOCTYPE html>
<html>
<head>
    <title>Home Dashboard</title>
</head>
<body>
    <h1>Home Dashboard</h1>
    <h2>Welcome <%= matchedUser.username %></h2>
    <h2>Create a Tweet</h2>
    <form id="tweetForm">
        <textarea id="tweetInput" name="content" maxlength="300" required></textarea><br><br>
        <button id="tweetButton" type="submit">Tweet</button>
        <input type="hidden" id="userIdInput" name="userId" value="<%= matchedUser.id %>">
        <input type="hidden" id="userNameInput"  value="<%= matchedUser.username %>">

    </form>
    <button id="updateButton">Update</button>
    <h2>Tweets and Threads</h2>
    <div id="tweetsContainer">
        <!-- Display tweets and threads here -->
    </div>
    <script>
        const tweetForm = document.getElementById('tweetForm');
        tweetForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const tweetInput = document.getElementById('tweetInput');
            const userIdInput = document.getElementById('userIdInput');
            const content = tweetInput.value;
            const userId = userIdInput.value;
            fetch('/tweets', {
                method: 'POST', 
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content, userId }),
            })
            .then(response => {
                fetchTweets()
            })
            .catch(error => {
                console.error('Failed to create tweet:', response.status);
            });
            tweetInput.value = ''; // Clear the tweet input field
        });
        
        const updateButton = document.getElementById('updateButton');
        updateButton.addEventListener('click', function() {
            fetchTweets();
        });
        function fetchTweets() {
            fetch('/tweets', {
                method: 'GET'
            })
            .then(response => response.json())
            .then(tweets => {
                // Clear the tweets container
                const tweetsContainer = document.getElementById('tweetsContainer');
                if (tweetsContainer) {
                    tweetsContainer.innerHTML = '';
                }
                // Display the tweets in the tweets container
                if (tweetsContainer) {
                    const userNameInput = document.getElementById('userNameInput');
                    const username = userNameInput.value;
                    tweets.forEach(tweet => {
                        const tweetElement = document.createElement('div');
                        tweetElement.textContent = tweet.content;
                        
                        // Display replies if available
                        if (tweet.replies && tweet.replies.length > 0) {
                            const repliesContainer = document.createElement('div');
                            repliesContainer.textContent = 'Comments:';
                            tweet.replies.forEach(reply => {
                                const replyElement = document.createElement('div');
                                replyElement.textContent = reply;
                                repliesContainer.appendChild(replyElement);
                            });
                            tweetElement.appendChild(repliesContainer);
                        }
        
                        // Create the reply button
                        const replyButton = document.createElement('button');
                        replyButton.textContent = 'Reply';
                        replyButton.addEventListener('click', () => {
                            // Prompt the user for the reply content
                            let replyContent = prompt('Enter your reply:');
                            if (replyContent) {
                                replyContent = "     " + username + " " + replyContent
                                replyToTweet(tweet.id, replyContent);
                                fetchTweets()
                            }
                        });
                        // Append the reply button to the tweet element
                        tweetElement.appendChild(replyButton);
                
                        // Append the tweet element to the tweets container
                        tweetsContainer.appendChild(tweetElement);
                    });
                }
            })
            .catch(error => {
                console.error('Failed to fetch tweets:', error);
            });
        }
        function replyToTweet(tweetId, replyContent) {
            const userId = 'your_user_id'; 
        
            fetch(`/tweets/${tweetId}/reply`, {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content: replyContent, userId }),
                })
                .then(response => {
                    if (response.ok) {
                    console.log('Reply posted successfully!');
                  // You can update the UI or perform any additional actions after the reply is posted
                    } else {
                    console.error('Failed to post reply:', response.status);
                }
                })
                .catch(error => {
                console.error('Failed to post reply:', error);
                });
            }

    </script>


</body>
</html>
